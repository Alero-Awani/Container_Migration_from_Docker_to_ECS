version: 0.2
phases:
  install:
    runtime-versions:
      python: 3.10
    commands:
      - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - &&
      - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" &&
      - sudo apt-get update -y &&
      - sudo sudo apt-get install docker-ce docker-ce-cli containerd.io -y &&
      - sudo curl -L https://raw.githubusercontent.com/docker/compose-cli/main/scripts/install/install_linux.sh | sh &
      - sudo curl -L https://github.com/docker/compose/releases/download/v2.9.0/docker-compose-linux-x86_64 -o /usr/bin/docker-compose
      - sudo chmod +x /usr/bin/docker-compose
      - export PATH="${HOME}/bin:$PATH"
      - which docker
      - which docker-compose
  pre_build:
    commands:
      - echo Logging in to Docker Hub...
      - docker login --username $DOCKERHUB_USERNAME --password $DOCKERHUB_PASSWORD
      - export ACCOUNT_ID=$(aws sts get-caller-identity --output text --query Account)
      - export STS_RESPONSE=$(curl 169.254.170.2$AWS_CONTAINER_CREDENTIALS_RELATIVE_URI)
      - echo $STS_RESPONSE
      - export AWS_ACCESS_KEY_ID=$(echo $STS_RESPONSE | jq .AccessKeyId | tr -d \")
      - echo $AWS_ACCESS_KEY_ID
      - export AWS_SECRET_ACCESS_KEY=$(echo $STS_RESPONSE | jq .SecretAccessKey | tr -d \")
      - export AWS_SESSION_TOKEN=$(echo $STS_RESPONSE | jq .Token | tr -d \")
      - sudo pip install --upgrade awscli && hash -r
      - echo "Create Docker ECS context"
      - docker context create ecs ecs-workshop --from-env
      - echo "Change context to use ECS context"
      - docker context use ecs-workshop
  build:
    commands:
      - DOCKER_HUB_ID=${DOCKERHUB_USERNAME} DOCKER_PULL_SECRETS_MANAGER=${DOCKER_PULL_SECRETS_MANAGER} docker compose -f docker-compose.yaml -f  docker-compose.prod.migrate.yaml -p ${PROJECT_NAME} up
  
  post_build:
    commands:
      - echo "deploy successful"